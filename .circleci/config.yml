version: 2.1
executors:
  my-executor:
    docker:
      - image: circleci/python:3.8.1-browsers
        environment:
          PIPENV_VENV_IN_PROJECT: true
          CHROME_BINARY_LOCATION: /usr/bin/google-chrome
          CHROME_DRIVER_LOCATION: /usr/local/bin/chromedriver
    working_directory: ~/CircleCIWork

orbs:
  slack: circleci/slack@4.1.2

commands:
  notify_success_slack:
    steps:
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": ":tada: ${CIRCLE_JOB} ジョブが成功しました。",
                    "emoji": true
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repogitory*:\n${CIRCLE_PROJECT_REPONAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*:\n${CIRCLE_BRANCH}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commiter*:\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*SHA*:\n${CIRCLE_SHA1}"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                    "alt_text": "CircleCI logo"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

  notify_fail_slack:
    steps:
      - slack/notify:
          event: always
          # event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "⚠ *${CIRCLE_JOB}* ジョブが失敗しました。"
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repogitory*:\n${CIRCLE_PROJECT_REPONAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*:\n${CIRCLE_BRANCH}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commiter*:\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*SHA*:\n${CIRCLE_SHA1}"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                    "alt_text": "CircleCI logo"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

  restore:
    steps:
      - when:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore_cache:
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile" }}
      - unless:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore_cache:
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

  save:
    steps:
      - when:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - save_cache:
                paths:
                  - ".venv"
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile" }}
      - unless:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - save_cache:
                paths:
                  - ".venv"
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

jobs:

  setup:
    executor: my-executor
    steps:
      - checkout
      - when:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore
            - run:
                name: Install for Requires.io
                command: |
                  python --version
                  sudo pip install pipenv
                  pipenv install --dev
                  pipenv lock
                  pipenv run pip install -e .
                  pipenv run pip list installed
            - save
            - store_artifacts:
                path: ./Pipfile.lock
            - notify_success_slack
            - notify_fail_slack
      - unless:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore
            - run:
                name: Install
                command: |
                  python --version
                  sudo pip install pipenv
                  pipenv sync --dev
                  pipenv run pip install -e .
                  pipenv run pip list installed
                  pwd
                  whoami
            - save
            - notify_success_slack
            - notify_fail_slack

  lint:
    executor: my-executor
    steps:
      - checkout
      - restore
      - run:
          name: Lint
          command: |
            pipenv run lint
      - notify_fail_slack

  test:
    executor: my-executor
    steps:
      - checkout
      - restore
      - run:
          name: Test
          command: |
            pipenv run ut
            bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: ./screenshot.png
      - notify_fail_slack

workflows:
  version: 2.1
  build-and-test-workflow:
    jobs:
      - setup:
          context: ci
      - lint:
          requires:
            - setup
          context: ci
      - test:
          requires:
            - setup
          context: ci
