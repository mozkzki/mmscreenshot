version: 2.1
executors:
  my-executor:
    docker:
      - image: circleci/python:3.8.1-browsers
        environment:
          PIPENV_VENV_IN_PROJECT: true
          CHROME_BINARY_LOCATION: /usr/bin/google-chrome
          CHROME_DRIVER_LOCATION: /usr/local/bin/chromedriver
    working_directory: ~/CircleCIWork

orbs:
  slack: circleci/slack@4.1.2

commands:
  notify_slack:
    steps:
      - slack/notify:
          event: always
      #     event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":circleci-fail: 「*${CIRCLE_JOB}*」ジョブが失敗しました。\n\n*Repogitory*:\n${CIRCLE_PROJECT_REPONAME}\n*Branch*:\n${CIRCLE_BRANCH}\n*Commiter*:\n${CIRCLE_USERNAME}\n*SHA*:\n${CIRCLE_SHA1}\n"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job",
                        "emoji": true
                      },
                      "value": "click_me_123",
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

  restore:
    steps:
      - when:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore_cache:
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile" }}
      - unless:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore_cache:
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

  save:
    steps:
      - when:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - save_cache:
                paths:
                  - ".venv"
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile" }}
      - unless:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - save_cache:
                paths:
                  - ".venv"
                key: mmscreenshot-v11-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

jobs:

  setup:
    executor: my-executor
    steps:
      - checkout
      - when:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore
            - run:
                name: Install for Requires.io
                command: |
                  python --version
                  sudo pip install pipenv
                  pipenv install --dev
                  pipenv lock
                  pipenv run pip install -e .
                  pipenv run pip list installed
                  sudo apt install -y fonts-ipafont
                  fc-cache -fv
                  ls -al /home/circleci/CircleCIWork
                  echo ${HOME}
            - save
            - store_artifacts:
                path: ./Pipfile.lock
      - unless:
          condition:
            equal: [ requires-io-master, << pipeline.git.branch >> ]
          steps:
            - restore
            - run:
                name: Install
                command: |
                  python --version
                  sudo pip install pipenv
                  pipenv sync --dev
                  pipenv run pip install -e .
                  pipenv run pip list installed
                  sudo apt install -y fonts-ipafont
                  fc-cache -fv
                  ls -al /home/circleci/CircleCIWork
                  echo ${HOME}
            - save

  lint:
    executor: my-executor
    steps:
      - checkout
      - restore
      - run:
          name: Lint
          command: |
            pipenv run lint
      - notify_slack

  test:
    executor: my-executor
    steps:
      - checkout
      - restore
      - run:
          name: Test
          command: |
            pipenv run ut
            bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: ./screenshot.png
      - notify_slack

workflows:
  version: 2.1
  build-and-test-workflow:
    jobs:
      - setup
      - lint:
          requires:
            - setup
          context: ci
      - test:
          requires:
            - setup
          context: ci
